# {{MetplusToolName}} METplus Configuration

[config]

# List of applications (tools) to run.
PROCESS_LIST = {{MetplusToolName}}

# time looping - options are INIT, VALID, RETRO, and REALTIME
# If set to INIT or RETRO:
#   INIT_TIME_FMT, INIT_BEG, INIT_END, and INIT_INCREMENT must also be set
# If set to VALID or REALTIME:
#   VALID_TIME_FMT, VALID_BEG, VALID_END, and VALID_INCREMENT must also be set
LOOP_BY = INIT

# Format of INIT_BEG and INIT_END using % items
# %Y = 4 digit year, %m = 2 digit month, %d = 2 digit day, etc.
# see www.strftime.org for more information
# %Y%m%d%H expands to YYYYMMDDHH
INIT_TIME_FMT = %Y%m%d%H

# Start time for METplus run - must match INIT_TIME_FMT
INIT_BEG = {{cdate}}

# End time for METplus run - must match INIT_TIME_FMT
INIT_END = {{cdate}}

# Increment between METplus runs (in seconds if no units are specified).
# Must be >= 60 seconds.
INIT_INCREMENT = 3600

# List of forecast leads to process for each run time (init or valid)
# In hours if units are not specified
# If unset, defaults to 0 (don't loop through forecast leads)
LEAD_SEQ = {{fhr_list}}
#
# Order of loops to process data - Options are times, processes
# Not relevant if only one item is in the PROCESS_LIST
# times = run all wrappers in the PROCESS_LIST for a single run time, then
#   increment the run time and run all wrappers again until all times have
#   been evaluated.
# processes = run the first wrapper in the PROCESS_LIST for all times
#   specified, then repeat for the next item in the PROCESS_LIST until all
#   wrappers have been run
#
LOOP_ORDER = times
#
# Specify the name of the METplus log file.
#
LOG_METPLUS = {LOG_DIR}/{{metplus_log_fn}}
#
# Specify the location and name of the final METplus conf file.
#
METPLUS_CONF = {{ '{' ~ METPLUS_TOOL_NAME ~ '_OUTPUT_DIR}' }}/metplus_final.{{metplus_config_fn}}
#
# Name to identify model (forecast) data in output.
#
MODEL = {{vx_fcst_model_name}}

{{METPLUS_TOOL_NAME}}_DESC = NA
#
# Name to identify observation data in output.
#
OBTYPE = {{obtype}}
#
# Verbosity of MET logging output.  0 to 5; 0 is quiet, 5 is loud.
#
LOG_{{METPLUS_TOOL_NAME}}_VERBOSITY = {{metplus_verbosity_level}}

###
# File I/O
###

#
# Forecast model input directory for {{MetplusToolName}}.
#
{{METPLUS_TOOL_NAME}}_INPUT_DIR = {{fcst_input_dir}}
#
# Template for forecast input to {{MetplusToolName}} relative to
# {{METPLUS_TOOL_NAME}}_INPUT_DIR.
#
# Note that this can be a comma separated list of ensemble members
# or a single line, - filename wildcard characters may be used, ? or *.
#
{{METPLUS_TOOL_NAME}}_INPUT_TEMPLATE = {{fcst_input_fn_template}}

# {{METPLUS_TOOL_NAME}}_CTRL_INPUT_DIR = {INPUT_BASE}
# {{METPLUS_TOOL_NAME}}_CTRL_INPUT_TEMPLATE =
#  {init?fmt=%Y%m%d%H}/mem1/postprd/{ENV[NET]}.t{init?fmt=%H}z.bgdawpf{lead?fmt=%HHH}.tm{init?fmt=%H}.grib2

#
# Output directory for {{MetplusToolName}}.
#
# OUTPUT_BASE apparently has to be set to something; it cannot be left
# to its default value.  But it is not explicitly used elsewhere in this
# configuration file.
#
OUTPUT_BASE = {{output_base}}
{{METPLUS_TOOL_NAME}}_OUTPUT_DIR = {{output_dir}}
#
# Template for output from {{MetplusToolName}} relative to {{METPLUS_TOOL_NAME}}_OUTPUT_DIR.
#
{{METPLUS_TOOL_NAME}}_OUTPUT_TEMPLATE = {{metplus_tool_name}}_{MODEL}_{{fieldname_in_met_filedir_names}}_{OBTYPE}_{lead?fmt=%H%M%S}L_{valid?fmt=%Y%m%d_%H%M%S}V.nc
#
# Directory for staging data.
#
STAGING_DIR = {{staging_dir}}
#
# There are n ensembles but 1 is used as control, so specify n-1 members.
#
{{METPLUS_TOOL_NAME}}_N_MEMBERS = {{num_ens_members}}

###
# Field Info
###
{%- set fields_levels_threshes = field_groups_dict[field_group] %}
{#-
Import useful jinja macros.
#}
{%- import metplus_templates_dir ~ '/metplus_macros.jinja' as metplus_macros %}
{#-
Reset the specified forecast level so that if it happens to be an accumulation
(e.g. 'A03'), the leading zeros in front of the hour are stipped out (i.e.
reset to 'A3').
#}
{%- set fcst_level = metplus_macros.get_accumulation_no_zero_pad(fcst_level) %}
{#-
Ensure that the level(s) and threshold(s) are valid.
#}
{{- metplus_macros.check_level(fields_levels_threshes, fcst_level) }}
{{- metplus_macros.check_thresh(fields_levels_threshes, fcst_level, fcst_thresh) }}

{%- set opts_indent = '' %}
{%- set opts_indent_len = '' %}
#
# Ensemble variables and levels as specified in the ens field dictionary
# of the MET configuration file. Specify as ENS_VARn_NAME, ENS_VARn_LEVELS,
# (optional) ENS_VARn_OPTION
#
{%- set ns = namespace(var_count = 0) %}
{%- for field, levels_threshes in fields_levels_threshes.items() %}
  {%- for level, threshes in levels_threshes.items() %}
    {%- if (fcst_level == 'all') or (fcst_level == level) %}
      {%- set ns.var_count = ns.var_count+1 %}
{#-
Set field name.
#}
ENS_VAR{{ns.var_count}}_NAME = {{field}}
{#-
Set field level(s).
#}
ENS_VAR{{ns.var_count}}_LEVELS = {{level}}
{#-
Set field threshold(s).
#}
      {%- if (fcst_thresh != 'none') %}
        {%- if (fcst_thresh == 'all') %}
ENS_VAR{{ns.var_count}}_THRESH = {{threshes|join(', ')}}
        {%- else %}
ENS_VAR{{ns.var_count}}_THRESH = {{fcst_thresh}}
        {%- endif %}
      {%- endif %}
{#-
Set field options.
#}
      {%- set opts_indent_len = 19 %}
      {%- if (ns.var_count > 9) and (ns.var_count <= 99) %}
        {%- set opts_indent_len = opts_indent_len + 1 %}
      {%- elif (ns.var_count > 99) and (ns.var_count <= 999) %}
        {%- set opts_indent_len = opts_indent_len + 2 %}
      {%- elif (ns.var_count > 999) %}
        {%- set opts_indent_len = opts_indent_len + 3 %}
      {%- endif %}
      {%- set opts_indent = ' '*opts_indent_len %}
      {%- if field_group == 'ADPSFC' %}
        {%- if field == 'HGT' %}
ENS_VAR{{ns.var_count}}_OPTIONS = GRIB_lvl_typ = 215;
{{opts_indent}}desc = "CEILING";
        {%- elif field == 'TCDC' %}
ENS_VAR{{ns.var_count}}_OPTIONS = GRIB_lvl_typ = 200;
{{opts_indent}}GRIB2_ipdtmpl_index=[27];
{{opts_indent}}GRIB2_ipdtmpl_val=[255];
{{opts_indent}}interp = { type = [ { method = NEAREST; width = 1; } ]; }
        {%- elif field == 'VIS' %}
ENS_VAR{{ns.var_count}}_OPTIONS = interp = { type = [ { method = NEAREST; width = 1; } ]; }
        {%- elif field == 'WIND' %}
# Derive instantaneous 10-m wind from U/V components, overriding max 10-m wind.
ENS_VAR{{ns.var_count}}_OPTIONS = GRIB2_pdt = 0;
        {%- endif %}
      {%- elif field_group == 'ADPUPA' %}
        {%- if field == 'CAPE' %}
ENS_VAR{{ns.var_count}}_OPTIONS = cnt_thresh = [ >0 ];
        {%- endif %}
      {%- elif field_group == 'RETOP' %}
        {%- if field == 'RETOP' %}
# Convert from meters to kilofeet.
ENS_VAR{{ns.var_count}}_OPTIONS = convert(x) = x * 3.28084 * 0.001;
        {%- endif %}
      {%- endif %}
      {{- '\n' }}
    {%- endif %}
  {%- endfor %}
{%- endfor %}
###
# {{MetplusToolName}}
###

# {{METPLUS_TOOL_NAME}}_REGRID_TO_GRID = NONE
# {{METPLUS_TOOL_NAME}}_REGRID_METHOD = NEAREST
# {{METPLUS_TOOL_NAME}}_REGRID_WIDTH = 1
# {{METPLUS_TOOL_NAME}}_REGRID_VLD_THRESH = 0.5
# {{METPLUS_TOOL_NAME}}_REGRID_SHAPE = SQUARE

# {{METPLUS_TOOL_NAME}}_CENSOR_THRESH =
# {{METPLUS_TOOL_NAME}}_CENSOR_VAL =
# {{METPLUS_TOOL_NAME}}_CAT_THRESH =
# {{METPLUS_TOOL_NAME}}_NC_VAR_STR =

# Threshold for ratio of valid files to expected files to allow app to run
{{METPLUS_TOOL_NAME}}_ENS_THRESH = 0.05

{{METPLUS_TOOL_NAME}}_NBRHD_PROB_WIDTH = 27
{{METPLUS_TOOL_NAME}}_NBRHD_PROB_SHAPE = CIRCLE
{{METPLUS_TOOL_NAME}}_NBRHD_PROB_VLD_THRESH = 0.0

# {{METPLUS_TOOL_NAME}}_NMEP_SMOOTH_VLD_THRESH = 0.0
# {{METPLUS_TOOL_NAME}}_NMEP_SMOOTH_SHAPE = CIRCLE
# {{METPLUS_TOOL_NAME}}_NMEP_SMOOTH_GAUSSIAN_DX = 81.27
# {{METPLUS_TOOL_NAME}}_NMEP_SMOOTH_GAUSSIAN_RADIUS = 120
# {{METPLUS_TOOL_NAME}}_NMEP_SMOOTH_METHOD = GAUSSIAN
# {{METPLUS_TOOL_NAME}}_NMEP_SMOOTH_WIDTH = 1

# {{METPLUS_TOOL_NAME}}_CLIMO_MEAN_FILE_NAME =
# {{METPLUS_TOOL_NAME}}_CLIMO_MEAN_FIELD =
# {{METPLUS_TOOL_NAME}}_CLIMO_MEAN_REGRID_METHOD =
# {{METPLUS_TOOL_NAME}}_CLIMO_MEAN_REGRID_WIDTH =
# {{METPLUS_TOOL_NAME}}_CLIMO_MEAN_REGRID_VLD_THRESH =
# {{METPLUS_TOOL_NAME}}_CLIMO_MEAN_REGRID_SHAPE =
# {{METPLUS_TOOL_NAME}}_CLIMO_MEAN_TIME_INTERP_METHOD =
# {{METPLUS_TOOL_NAME}}_CLIMO_MEAN_MATCH_MONTH =
# {{METPLUS_TOOL_NAME}}_CLIMO_MEAN_DAY_INTERVAL = 31
# {{METPLUS_TOOL_NAME}}_CLIMO_MEAN_HOUR_INTERVAL = 6

# {{METPLUS_TOOL_NAME}}_CLIMO_STDEV_FILE_NAME =
# {{METPLUS_TOOL_NAME}}_CLIMO_STDEV_FIELD =
# {{METPLUS_TOOL_NAME}}_CLIMO_STDEV_REGRID_METHOD =
# {{METPLUS_TOOL_NAME}}_CLIMO_STDEV_REGRID_WIDTH =
# {{METPLUS_TOOL_NAME}}_CLIMO_STDEV_REGRID_VLD_THRESH =
# {{METPLUS_TOOL_NAME}}_CLIMO_STDEV_REGRID_SHAPE =
# {{METPLUS_TOOL_NAME}}_CLIMO_STDEV_TIME_INTERP_METHOD =
# {{METPLUS_TOOL_NAME}}_CLIMO_STDEV_MATCH_MONTH =
# {{METPLUS_TOOL_NAME}}_CLIMO_STDEV_DAY_INTERVAL = 31
# {{METPLUS_TOOL_NAME}}_CLIMO_STDEV_HOUR_INTERVAL = 6

{{METPLUS_TOOL_NAME}}_ENSEMBLE_FLAG_LATLON = TRUE
{{METPLUS_TOOL_NAME}}_ENSEMBLE_FLAG_MEAN = TRUE
{{METPLUS_TOOL_NAME}}_ENSEMBLE_FLAG_STDEV = TRUE
{{METPLUS_TOOL_NAME}}_ENSEMBLE_FLAG_MINUS = FALSE
{{METPLUS_TOOL_NAME}}_ENSEMBLE_FLAG_PLUS = FALSE
{{METPLUS_TOOL_NAME}}_ENSEMBLE_FLAG_MIN = FALSE
{{METPLUS_TOOL_NAME}}_ENSEMBLE_FLAG_MAX = FALSE
{{METPLUS_TOOL_NAME}}_ENSEMBLE_FLAG_RANGE = TRUE
{{METPLUS_TOOL_NAME}}_ENSEMBLE_FLAG_VLD_COUNT = TRUE
{{METPLUS_TOOL_NAME}}_ENSEMBLE_FLAG_FREQUENCY = TRUE
{{METPLUS_TOOL_NAME}}_ENSEMBLE_FLAG_NEP = TRUE
{{METPLUS_TOOL_NAME}}_ENSEMBLE_FLAG_NMEP = TRUE
{{METPLUS_TOOL_NAME}}_ENSEMBLE_FLAG_CLIMO = FALSE
{{METPLUS_TOOL_NAME}}_ENSEMBLE_FLAG_CLIMO_CDF = FALSE

# {{METPLUS_TOOL_NAME}}_ENS_MEMBER_IDS =
# {{METPLUS_TOOL_NAME}}_CONTROL_ID =
