# Ensemble probabilistic {{MetplusToolName}} METplus Configuration

[config]

# List of applications (tools) to run.
PROCESS_LIST = {{MetplusToolName}}

# time looping - options are INIT, VALID, RETRO, and REALTIME
# If set to INIT or RETRO:
#   INIT_TIME_FMT, INIT_BEG, INIT_END, and INIT_INCREMENT must also be set
# If set to VALID or REALTIME:
#   VALID_TIME_FMT, VALID_BEG, VALID_END, and VALID_INCREMENT must also be set
LOOP_BY = INIT

# Format of INIT_BEG and INIT_END using % items
# %Y = 4 digit year, %m = 2 digit month, %d = 2 digit day, etc.
# see www.strftime.org for more information
# %Y%m%d%H expands to YYYYMMDDHH
INIT_TIME_FMT = %Y%m%d%H

# Start time for METplus run - must match INIT_TIME_FMT
INIT_BEG = {{cdate}}

# End time for METplus run - must match INIT_TIME_FMT
INIT_END = {{cdate}}

# Increment between METplus runs (in seconds if no units are specified).
# Must be >= 60 seconds.
INIT_INCREMENT = 3600

# List of forecast leads to process for each run time (init or valid)
# In hours if units are not specified
# If unset, defaults to 0 (don't loop through forecast leads)
LEAD_SEQ = {{fhr_list}}
#
# Order of loops to process data - Options are times, processes
# Not relevant if only one item is in the PROCESS_LIST
# times = run all wrappers in the PROCESS_LIST for a single run time, then
#   increment the run time and run all wrappers again until all times have
#   been evaluated.
# processes = run the first wrapper in the PROCESS_LIST for all times
#   specified, then repeat for the next item in the PROCESS_LIST until all
#   wrappers have been run
#
LOOP_ORDER = times

# Verbosity of MET logging output.  0 to 5; 0 is quiet, 5 is loud.
LOG_{{METPLUS_TOOL_NAME}}_VERBOSITY = {{metplus_verbosity_level}}
#
# Specify the name of the METplus log file.
#
LOG_METPLUS = {LOG_DIR}/{{metplus_log_fn}}
#
# Specify the location and name of the final METplus conf file.
#
METPLUS_CONF = {{ '{' ~ METPLUS_TOOL_NAME ~ '_OUTPUT_DIR}' }}/metplus_final.{{metplus_config_fn}}
#
# Location of MET configuration file to pass to {{MetplusToolName}}.
#
# References PARM_BASE, which is the location of the parm directory
# corresponding to the ush directory of the run_metplus.py script that
# is called or the value of the environment variable METPLUS_PARM_BASE
# if set.
#
{{METPLUS_TOOL_NAME}}_CONFIG_FILE = {PARM_BASE}/met_config/{{MetplusToolName}}Config_wrapped

{{METPLUS_TOOL_NAME}}_OBS_QUALITY_INC = 0, 1, 2, 3, 9, NA
#{{METPLUS_TOOL_NAME}}_OBS_QUALITY_EXC =

{{METPLUS_TOOL_NAME}}_CLIMO_MEAN_TIME_INTERP_METHOD = NEAREST
#{{METPLUS_TOOL_NAME}}_CLIMO_STDEV_TIME_INTERP_METHOD =

#{{METPLUS_TOOL_NAME}}_INTERP_VLD_THRESH =
#{{METPLUS_TOOL_NAME}}_INTERP_SHAPE =
{{METPLUS_TOOL_NAME}}_INTERP_TYPE_METHOD = BILIN
{{METPLUS_TOOL_NAME}}_INTERP_TYPE_WIDTH = 2

#{{METPLUS_TOOL_NAME}}_OUTPUT_FLAG_FHO =
#{{METPLUS_TOOL_NAME}}_OUTPUT_FLAG_CTC =
#{{METPLUS_TOOL_NAME}}_OUTPUT_FLAG_CTS =
#{{METPLUS_TOOL_NAME}}_OUTPUT_FLAG_MCTC =
#{{METPLUS_TOOL_NAME}}_OUTPUT_FLAG_MCTS =
#{{METPLUS_TOOL_NAME}}_OUTPUT_FLAG_CNT =
#{{METPLUS_TOOL_NAME}}_OUTPUT_FLAG_SL1L2 =
#{{METPLUS_TOOL_NAME}}_OUTPUT_FLAG_SAL1L2 =
#{{METPLUS_TOOL_NAME}}_OUTPUT_FLAG_VL1L2 =
#{{METPLUS_TOOL_NAME}}_OUTPUT_FLAG_VAL1L2 =
#{{METPLUS_TOOL_NAME}}_OUTPUT_FLAG_VCNT =
{{METPLUS_TOOL_NAME}}_OUTPUT_FLAG_PCT = STAT
{{METPLUS_TOOL_NAME}}_OUTPUT_FLAG_PSTD = STAT
{{METPLUS_TOOL_NAME}}_OUTPUT_FLAG_PJC = STAT
{{METPLUS_TOOL_NAME}}_OUTPUT_FLAG_PRC = STAT
#{{METPLUS_TOOL_NAME}}_OUTPUT_FLAG_ECNT =
#{{METPLUS_TOOL_NAME}}_OUTPUT_FLAG_RPS =
#{{METPLUS_TOOL_NAME}}_OUTPUT_FLAG_ECLV =
#{{METPLUS_TOOL_NAME}}_OUTPUT_FLAG_MPR =
#{{METPLUS_TOOL_NAME}}_OUTPUT_FLAG_ORANK =

{{METPLUS_TOOL_NAME}}_CLIMO_CDF_BINS = 1
#{{METPLUS_TOOL_NAME}}_CLIMO_CDF_CENTER_BINS = False
#{{METPLUS_TOOL_NAME}}_CLIMO_CDF_WRITE_BINS = True

#{{METPLUS_TOOL_NAME}}_HSS_EC_VALUE =

#
# Observation data time window(s).
#
OBS_WINDOW_BEGIN = -1799
OBS_WINDOW_END = 1800
OBS_{{METPLUS_TOOL_NAME}}_WINDOW_BEGIN = {OBS_WINDOW_BEGIN}
OBS_{{METPLUS_TOOL_NAME}}_WINDOW_END = {OBS_WINDOW_END}

# Optional list of offsets to look for point observation data
{{METPLUS_TOOL_NAME}}_OFFSETS = 0
#
# Name to identify model (forecast) data in output.
#
# The variable MODEL is recorded in the stat files, and the data in
# these files is then plotted (e.g. using METViewer).  Here, we add a
# suffix to MODEL that identifies the data as ensemble-probabilistic.
# This makes it easier to identify each curve.
#
MODEL = {{vx_fcst_model_name}}_ensprob
#
# Name to identify observation data in output.
#
OBTYPE = {{obtype}}
#
# Value to enter under the DESC column in the output stat file.
#
{{METPLUS_TOOL_NAME}}_DESC = NA

# Regrid to specified grid.  Indicate NONE if no regridding, or the grid id
# (e.g. G212)
{{METPLUS_TOOL_NAME}}_REGRID_TO_GRID = NONE
{{METPLUS_TOOL_NAME}}_REGRID_METHOD = BILIN
{{METPLUS_TOOL_NAME}}_REGRID_WIDTH = 2

{{METPLUS_TOOL_NAME}}_OUTPUT_PREFIX = {MODEL}_{{fieldname_in_met_filedir_names}}_{OBTYPE}

# sets the -obs_valid_beg command line argument (optional)
# not used for this example
#{{METPLUS_TOOL_NAME}}_OBS_VALID_BEG = {valid?fmt=%Y%m%d_%H}

# sets the -obs_valid_end command line argument (optional)
# not used for this example
#{{METPLUS_TOOL_NAME}}_OBS_VALID_END = {valid?fmt=%Y%m%d_%H}

# Verification Masking regions
# Indicate which grid and polygon masking region, if applicable
{{METPLUS_TOOL_NAME}}_GRID =

# List of full path to poly masking files.  NOTE: Only short lists of poly
# files work (those that fit on one line), a long list will result in an
# environment variable that is too long, resulting in an error.  For long
# lists of poly masking files (i.e. all the mask files in the NCEP_mask
# directory), define these in the METplus {{MetplusToolName}} configuration file.
{{METPLUS_TOOL_NAME}}_POLY = {MET_INSTALL_DIR}/share/met/poly/CONUS.poly
{{METPLUS_TOOL_NAME}}_STATION_ID =

# Message types, if all message types are to be returned, leave this empty,
# otherwise indicate the message types of interest.
{{METPLUS_TOOL_NAME}}_MESSAGE_TYPE = {{fieldname_in_met_filedir_names}}

# set to True to run {{MetplusToolName}} once for each name/level combination
# set to False to run {{MetplusToolName}} once per run time including all fields
{{METPLUS_TOOL_NAME}}_ONCE_PER_FIELD = False

{%- set fields_levels_threshes = field_groups_dict[field_group] %}
{#-
Import useful jinja macros.
#}
{%- import metplus_templates_dir ~ '/metplus_macros.jinja' as metplus_macros %}
{#-
Reset the specified forecast level so that if it happens to be an accumulation
(e.g. 'A03'), the leading zeros in front of the hour are stipped out (i.e.
reset to 'A3').
#}
{%- set fcst_level = metplus_macros.get_accumulation_no_zero_pad(fcst_level) %}
{#-
Ensure that the level(s) and threshold(s) are valid.
#}
{{- metplus_macros.check_level(fields_levels_threshes, fcst_level) }}
{{- metplus_macros.check_thresh(fields_levels_threshes, fcst_level, fcst_thresh) }}

{%- set opts_indent = '' %}
{%- set opts_indent_len = '' %}
#
# List of forecast and corresponding observation fields to process.
# Note that the forecast variable name must exactly match the name of a
# variable in the forecast input file(s).
#
{%- set field_obs = '' %}
{%- set level_obs = '' %}
{%- set thresh_and_or = '' %}
{%- set fcst_prob_thresh = '==0.1' %}
{%- set ns = namespace(var_count = 0) %}

{%- for field, levels_threshes in fields_levels_threshes.items() %}
  {%- for level, threshes in levels_threshes.items() %}
    {%- if (fcst_level == 'all') or (fcst_level == level) %}
      {%- for thresh in threshes %}
        {%- if (fcst_thresh == 'all') or (fcst_thresh == thresh) %}
          {%- set ns.var_count = ns.var_count+1 %}
{#-
Set forecast field name.
#}
          {%- set thresh_and_or = thresh|replace("&&", ".and.") %}
          {%- set thresh_and_or = thresh_and_or|replace("||", ".or.") %}
FCST_VAR{{ns.var_count}}_NAME = {{field}}_{{level}}_ENS_FREQ_{{thresh_and_or}}
{#-
Set forecast field level(s).
#}
FCST_VAR{{ns.var_count}}_LEVELS = {{level}}
{#-
Set forecast field threshold(s).
#}
FCST_VAR{{ns.var_count}}_THRESH = {{fcst_prob_thresh}}
{#-
Set forecast field options.
#}
          {%- set opts_indent_len = 20 %}
          {%- if (ns.var_count > 9) and (ns.var_count <= 99) %}
            {%- set opts_indent_len = opts_indent_len + 1 %}
          {%- elif (ns.var_count > 99) and (ns.var_count <= 999) %}
            {%- set opts_indent_len = opts_indent_len + 2 %}
          {%- elif (ns.var_count > 999) %}
            {%- set opts_indent_len = opts_indent_len + 3 %}
          {%- endif %}
          {%- set opts_indent = ' '*opts_indent_len %}
          {%- if field_group == 'ADPSFC' %}
            {%- if field == 'HGT' %}
FCST_VAR{{ns.var_count}}_OPTIONS = desc = "CEILING";
            {%- elif field == 'VIS' %}
FCST_VAR{{ns.var_count}}_OPTIONS = interp = { type = [ { method = NEAREST; width = 1; } ]; }
            {%- endif %}
          {%- endif %}
{#-
Set observation field name.
#}
          {%- set field_obs = field %}
          {%- if field_group == 'ADPSFC' %}
            {%- if field == 'HGT' %}
              {%- set field_obs = 'CEILING' %}
            {%- endif %}
          {%- elif field_group == 'ADPUPA' %}
            {%- if field == 'HPBL' %}
              {%- set field_obs = 'PBL' %}
            {%- endif %}
          {%- endif %}
OBS_VAR{{ns.var_count}}_NAME = {{field_obs}}
{#-
Set observation field level(s).
#}
          {%- set level_obs = level %}
          {%- if field_group == 'ADPUPA' %}
            {%- if field == 'CAPE' %}
              {%- set level_obs = level_obs ~ '-100000' %}
            {%- endif %}
          {%- endif %}
OBS_VAR{{ns.var_count}}_LEVELS = {{level_obs}}
{#-
Set observation field threshold(s).
#}
OBS_VAR{{ns.var_count}}_THRESH = {{thresh}}
{#-
Set observation field options.
#}
          {%- set opts_indent_len = opts_indent_len - 1 %}
          {%- set opts_indent = ' '*opts_indent_len %}
          {%- if field_group == 'ADPSFC' %}
            {%- if field == 'HGT' %}
OBS_VAR{{ns.var_count}}_OPTIONS = GRIB_lvl_typ = 215;
{{opts_indent}}interp = { type = [ { method = NEAREST; width = 1; } ]; }
            {%- elif field == 'VIS' %}
OBS_VAR{{ns.var_count}}_OPTIONS = interp = { type = [ { method = NEAREST; width = 1; } ]; }
            {%- endif %}
          {%- elif field_group == 'ADPUPA' %}
            {%- if field == 'CAPE' %}
OBS_VAR{{ns.var_count}}_OPTIONS = cnt_thresh = [ >0 ];
{{opts_indent}}cnt_logic = UNION;
            {%- elif field == 'HPBL' %}
OBS_VAR{{ns.var_count}}_OPTIONS = desc = "TKE";
            {%- endif %}
          {%- endif %}
          {{- '\n' }}
        {%- endif %}
      {%- endfor %} {#- End loop over thresholds. #}
    {%- endif %}
  {%- endfor %} {#- End loop over levels. #}
{%- endfor %} {#- End loop over fields in the specified field_group. #}

# Forecast data description variables
FCST_IS_PROB = True
FCST_PROB_IN_GRIB_PDS = False

# End of [config] section and start of [dir] section.
[dir]
#
# Directory containing observation input to {{MetplusToolName}}.
#
OBS_{{METPLUS_TOOL_NAME}}_INPUT_DIR = {{obs_input_dir}}
#
# Directory containing forecast input to {{MetplusToolName}}.
#
FCST_{{METPLUS_TOOL_NAME}}_INPUT_DIR = {{fcst_input_dir}}
#
# Directory containing climatology mean input to {{MetplusToolName}}.  Not used in
# this example.
#
{{METPLUS_TOOL_NAME}}_CLIMO_MEAN_INPUT_DIR =
#
# Directory containing climatology mean input to {{MetplusToolName}}.  Not used in
# this example.
#
{{METPLUS_TOOL_NAME}}_CLIMO_STDEV_INPUT_DIR =
#
# Directory in which to write output from {{MetplusToolName}}.
#
# OUTPUT_BASE apparently has to be set to something; it cannot be left
# to its default value.  But it is not explicitly used elsewhere in this
# configuration file.
#
OUTPUT_BASE = {{output_base}}
{{METPLUS_TOOL_NAME}}_OUTPUT_DIR = {{output_dir}}
#
# Directory for staging data.
#
STAGING_DIR = {{staging_dir}}

# End of [dir] section and start of [filename_templates] section.
[filename_templates]
#
# Template for observation input to {{MetplusToolName}} relative to
# OBS_{{METPLUS_TOOL_NAME}}_INPUT_DIR.
#
OBS_{{METPLUS_TOOL_NAME}}_INPUT_TEMPLATE = {{obs_input_fn_template}}
#
# Template for forecast input to {{MetplusToolName}} relative to
# FCST_{{METPLUS_TOOL_NAME}}_INPUT_DIR.
#
FCST_{{METPLUS_TOOL_NAME}}_INPUT_TEMPLATE = {{fcst_input_fn_template}}
#
# Template for output from {{MetplusToolName}} relative to {{METPLUS_TOOL_NAME}}_OUTPUT_DIR.
#
{{METPLUS_TOOL_NAME}}_OUTPUT_TEMPLATE =
#
# Template for climatology input to {{MetplusToolName}} relative to
# {{METPLUS_TOOL_NAME}}_CLIMO_MEAN_INPUT_DIR.  Not used in this example.
#
{{METPLUS_TOOL_NAME}}_CLIMO_MEAN_INPUT_TEMPLATE =
#
# Template for climatology input to {{MetplusToolName}} relative to
# {{METPLUS_TOOL_NAME}}_CLIMO_STDEV_INPUT_DIR.  Not used in this example.
#
{{METPLUS_TOOL_NAME}}_CLIMO_STDEV_INPUT_TEMPLATE =
